plugins {
    id 'java'
    id "org.springframework.boot" version "$springBootVersion"
    id 'io.spring.dependency-management' version "${dependancyManagementVersion}"
}

group 'com.epam.training'
version '1.0'
sourceCompatibility = '11'

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://repo.spring.io/release" }
}

bootRun {
    // support passing -Dsystem.property=value to bootRun task
    systemProperties = System.properties
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
    implementation "com.mpatric:mp3agic:${mp3MagicVersion}"
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework:spring-aspects'
    implementation "io.projectreactor.kafka:reactor-kafka:${reactorKafkaVersion}"
    implementation "net.logstash.logback:logstash-logback-encoder:${logstashLogbackVersion}"
    implementation "io.micrometer:micrometer-tracing-bridge-brave:${micrometerVersion}"
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation "org.hamcrest:hamcrest-all:${hamcrestVersion}"
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.testcontainers:kafka'
    testImplementation "com.squareup.okhttp3:okhttp:${mockWebServerVersion}"
    testImplementation "com.squareup.okhttp3:mockwebserver:${mockWebServerVersion}"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

test {
    useJUnitPlatform()
    testLogging {
        exceptionFormat = 'full'
    }
}