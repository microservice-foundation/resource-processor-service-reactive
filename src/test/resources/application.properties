# kafka configuration
kafka.topic.resource-staging=resource-staging
kafka.topic.resource-permanent=resource-permanent
kafka.topic.properties.partition-count=3
kafka.topic.properties.replication-factor=3

spring.kafka.producer.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS_ENDPOINTS:localhost:9091,localhost:9092,localhost:9093}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.enable-idempotence=true
spring.kafka.producer.acks=all
spring.kafka.producer.max-in-flight-requests-per-connection=5
spring.kafka.producer.transactional-id=tx-
spring.kafka.producer.retries=99999
spring.kafka.consumer.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS_ENDPOINTS:localhost:9091,localhost:9092,localhost:9093}
spring.kafka.consumer.client-id=${spring.application.name}-consumer
spring.kafka.consumer.group-id=${spring.application.name}-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.isolation-level=read_committed
spring.kafka.consumer.properties.spring.json.trusted.packages=com.epam.training.microservicefoundation.resourceprocessor.domain
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=com.epam.training.microservicefoundation.resourceprocessor.domain.event.ResourceProcessedEvent
spring.kafka.consumer.retry.backoff.interval=1000
spring.kafka.consumer.retry.backoff.multiplier=2
spring.kafka.consumer.retry.backoff.max-retries=3

# client configuration
web-client.connection-timeout=5000
web-client.response-timeout=5000
web-client.read-timeout=5000
web-client.write-timeout=5000
web-client.base-url=http://localhost:${web-client.base-port}
web-client.base-port=19025

# retry configuration
spring.cloud.config.retry.initialInterval=1000
spring.cloud.config.retry.maxInterval=2000
spring.cloud.config.retry.multiplier=1.1
spring.cloud.config.retry.maxAttempts=3

# circuit breaker configuration
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
resilience4j.circuitbreaker.configs.default.slidingWindowSize=5
resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=3
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=5000
resilience4j.circuitbreaker.configs.default.failureRateThreshold=60
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=2
resilience4j.circuitbreaker.configs.default.slowCallDurationThreshold=5000
resilience4j.circuitbreaker.configs.default.slowCallRateThreshold=60
resilience4j.circuitbreaker.configs.default.recordExceptions=org.springframework.web.reactive.function.client.WebClientResponseException.InternalServerError,\
  org.springframework.web.reactive.function.client.WebClientResponseException.ServiceUnavailable,\
  org.springframework.web.reactive.function.client.WebClientResponseException.BadGateway,\
  org.springframework.web.reactive.function.client.WebClientResponseException.GatewayTimeout,\
  java.io.IOException
resilience4j.circuitbreaker.configs.default.ignoreExceptions=org.springframework.web.reactive.function.client.WebClientResponseException.BadRequest,\
  org.springframework.web.reactive.function.client.WebClientResponseException.NotFound
resilience4j.timelimiter.configs.default.cancelRunningFuture=false
resilience4j.timelimiter.configs.default.timeoutDuration=5s

#Disable discovery
spring.cloud.discovery.enabled=false

#Disable cloud config and config discovery
spring.cloud.config.discovery.enabled=false
spring.cloud.config.enabled=false

spring.main.allow-bean-definition-overriding=true